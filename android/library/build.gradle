plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

def isSnapShot = false

def libraryVersionNameVal = '8.12.15.4'   // the first 3 parts are the metadata that this is based on

if (isSnapShot)
    libraryVersionNameVal += '-SNAPSHOT'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 30
        versionCode 1
        versionName libraryVersionNameVal
    }

    flavorDimensions "type"
    productFlavors {
        geocoder {
            dimension "type"
        }
        libphonenumber {
            dimension "type"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            java.srcDirs =
                    [
                            'src/libphonenumber/src',
                            'src/internal/prefixmapper/src'
                    ]
            assets.srcDirs =
                    [
                            'src/libphonenumber/assets',
                    ]
            manifest.srcFile 'src/libphonenumber/AndroidManifest.xml'
        }
        libphonenumber {
        }
        geocoder {
            java.srcDirs =
                    [
                            'src/geocoder/src',
                            'src/carrier/src'
                    ]
            assets.srcDirs =
                    [
                            'src/geocoder/assets',
                            'src/carrier/assets'
                    ]

        }
    }

    task sourcesJarLibphonenumber(type: Jar) {
        classifier 'sources'
        from sourceSets.main.java.srcDirs, sourceSets.libphonenumber.java.srcDirs
    }

    task sourcesJarGeocoder(type: Jar) {
        classifier 'sources'
        from sourceSets.main.java.srcDirs, sourceSets.geocoder.java.srcDirs
    }

    task javadocLibphonenumber(type: Javadoc) {
        failOnError false
        source sourceSets.main.java.sourceFiles, sourceSets.libphonenumber.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
    }

// build a jar with javadoc
    task javadocJarLibphonenumber(type: Jar, dependsOn: javadocLibphonenumber) {
        classifier 'javadoc'
        from javadocLibphonenumber.destinationDir
    }

    task javadocGeocoder(type: Javadoc) {
        failOnError false
        source sourceSets.main.java.sourceFiles, sourceSets.geocoder.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
    }

// build a jar with javadoc
    task javadocJarGeocoder(type: Jar, dependsOn: javadocGeocoder) {
        classifier 'javadoc'
        from javadocGeocoder.destinationDir
    }

}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


project.afterEvaluate {
    publishing {
        publications {
            libphonenumber(MavenPublication) {
                from components.libphonenumberRelease
                artifact sourcesJarLibphonenumber
                artifact javadocJarLibphonenumber
                groupId = 'com.lionscribe.open.libphonenumber'
                artifactId = 'libphonenumber'
                version = libraryVersionNameVal
                pom {
                    name = 'libphonenumber-android'
                    description = 'A designed for Android port of Google\'s libphonenumber library.'
                    url = 'https://github.com/lionscribe/libphonenumber-android'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'lionscribe'
                            email = 'lionscribe@lionscribe.com'
                            organization = 'Lionscribe Software LLC'
                            organizationUrl = 'http://lionscribe.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/lionscribe/libphonenumber-android.git'
                        developerConnection = 'scm:git:ssh://github.com:lionscribe/libphonenumber-android.git'
                        url = 'https://github.com/lionscribe/libphonenumber-android/tree/master'
                    }
                }
            }
            geocoder(MavenPublication) {
                from components.geocoderRelease
                artifact sourcesJarGeocoder
                artifact javadocJarGeocoder
                groupId = 'com.lionscribe.open.libphonenumber'
                artifactId = 'geocoder'
                version = libraryVersionNameVal
                pom {
                    name = 'libphonenumber-geocoder-android'
                    description = 'A designed for Android port of Google\'s libphonenumber-geocoder library'
                    url = 'https://github.com/lionscribe/libphonenumber-android'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'lionscribe'
                            email = 'lionscribe@lionscribe.com'
                            organization = 'Lionscribe Software LLC'
                            organizationUrl = 'http://lionscribe.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/lionscribe/libphonenumber-android.git'
                        developerConnection = 'scm:git:ssh://github.com:lionscribe/libphonenumber-android.git'
                        url = 'https://github.com/lionscribe/libphonenumber-android/tree/master'
                    }
                }
            }
        }
        repositories {
            maven {
                url = libraryVersionNameVal.endsWith("-SNAPSHOT") ? 'https://oss.sonatype.org/content/repositories/snapshots' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                credentials {
                    username = properties.getProperty("sonatype.user")
                    password = properties.getProperty("sonatype.password")
                }
            }
        }

        signing {
            def signingKeyId = properties.getProperty("signing.keyId")
            def signingPassword = properties.getProperty("signing.password")
            def signingKey = new File("\\Users\\arye\\Repositories\\others\\.certificates\\lionscribe_0xD3FF76A6_SECRET.asc").text

            useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
            sign publishing.publications.libphonenumber
            sign publishing.publications.geocoder
        }
    }
}

dependencies {
}